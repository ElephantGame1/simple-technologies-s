         Q.W.C 2
Quality writing code
     Variables 
1 Name of variables 
-------------------
They should be named clearly and qualitatively

2 Data types
-------------------
There are four data types: int, float, bool, str

3 Construction, how to write
----------------------------

int name_variable 57
float name_variable 78,9
bool name_variable true
bool name_variable false
str name_variable hello

It's mandatory in any case, <type> and <name> and <value>. You must write the space between tokens and arithmetic operations.


1 how it works
--------------
Write out keyword for additions: intS , floatS , strS
then specify the name of the variable and what you want to add which numbers or variables for the minus floatM , intM and specify everything the same as for the sum
for multiplication.

intU , floatU
specify everything the same as for the sum for division.

intD , floatD
specify everything the same as for the amount.
remainder of the division

intP , floatP specify everything the same as for the amount.


2 how to write
--------------

For addition:
intS variable_name 34 56
floatS variable_name 34,56 56,34
strS variable_name hel lo

For subtraction:
intM variable_name 34 56
floatM variable_name 34,56 56,34

For multiplication:
intU variable_name 34 56
floatU variable_name 34,56 56,34

For division:
intD variable_name 34 56
floatD variable_name 34,56 56,34

For the remainder after divide:
intP variable_name 34 56
floatP variable_name 34,56 56,34

Variables instead of numbers:

In mandatory, don't put arithmetic signs, write everything with the space
       
       NUMBERS CONVERTING

1 how it works
--------------
You write the keyword convert, then specify which type to convert to, then specify the name of the variable, then from which type and the number or itself variable.

2 how to write
--------------
convert int variable_name float 34,67

You could could used all the types, you also can use variables.
       
       NUMBERS COMPARING
       
1 how it works
--------------
You specify the compare keyword, then write how you want to compare, which's bigger or equal to bigEarly, less is "lesser" keyword, less or equal is "lesserEarly", absolute equal is "equals" and don't equal is "unequal: after that specify name with a variable (saved in the bool type).

2 how to write
--------------
сompare big variable_name 5 4
сompare bigEarly variable_name 4 4
сompare lesser variable_name 4 5
сompare lesserEarly variable_name 5 5
сompare equals variable_name 5 5
сompare unequal variable_name 5 4

       OUTPUT TO THE SCREEN
       
1 how it works
--------------
You write the keyword "log" or "Dlog". If just a line that is not a variable. Then write log hello Dlog hello, if with a variable then specify the type and itself variable log int a Dlog int b.
Dlog outputs log information in one line with enter.

In the 1.2 version, the output and outPut commands were added, these commands are much better than "log" and "Dlog" in that they don't need to specify the data type and can be plussed (as a string) with ~ sign so that the space needs / sign it works for all commands. This display on the screen outPut differs from output in that outPut goes to a new line, but output doesn't do it.

2 usage examples

outPut hello~world 
conclusion: 
helloworld

outPut helloworld 
conclusion: 
helloworld


outPut hello/world 
And we'll see: 
hello world


       USER INPUT
1 how it works
--------------
You write the keyword enter, then type, then variable name, then your question (NOT OPTIONAL) in the 1.2 version, the / is the space sign appeared.

2 how to write
--------------
enter int variable_name age?
enter str variable_name name?
enter float variable_name 
enter int variable_name age?/:/
conclusion: 
age? :   here you write a number
here you write a number - this is itself the user input, user in this case - I.
     HOW TO COMPILE
There is an IDE there, write code and compile, but if you wanna compile without an ide, there is a developer console in the folder where this documentation is called consoleDevelop.exe click and follow the instructions.
